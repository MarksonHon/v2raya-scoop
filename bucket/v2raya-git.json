{
    "version": "20221120.40bebe6",
    "description": "v2rayA is a V2Ray client supporting global transparent proxy(Linux Only), compatible with SS, SSR, Trojan(trojan-go), PingTunnel protocols.",
    "homepage": "https://github.com/v2rayA/v2raya",
    "license": {
        "identifier": "AGPL-3.0-only",
        "url": "https://github.com/v2rayA/v2rayA/blob/master/LICENSE"
    },
    "notes": "If you want to run both 'v2raya' and 'v2raya-git', follow the official docs to change the ports.",
    "depends": [
        "v2ray",
        "yarn",
        "nodejs-lts",
        "go"
    ],
    "suggest": {
        "v2ray-rules-dat": "v2raya/v2ray-rules-dat",
        "powershell": "dorado/powershell"
    },
    "architecture": {
        "64bit": {
            "url": "https://github.com/v2rayA/v2rayA/archive/40bebe604a91283eb2f3d94a1eb42af7a0e4c35c.zip",
            "hash": "ca188a3ef037273f173ac5ef10198a954a780f6e75467933b44507ef5f1b268d",
            "extract_dir": "v2rayA-40bebe604a91283eb2f3d94a1eb42af7a0e4c35c"
        }
    },
    "pre_install": [
        "if (Test-Path \"$env:UserProfile\\.config\\v2raya\") {",
        "    info '[Persistent data]: Copying user data...'",
        "    ensure \"$persist_dir\" | Out-Null",
        "    Copy-Item \"$env:UserProfile\\.config\\v2raya\\*\" \"$persist_dir\\\" -ErrorAction SilentlyContinue -Recurse -Force",
        "    Remove-Item \"$env:UserProfile\\.config\\v2raya\" -ErrorAction SilentlyContinue -Recurse -Force",
        "}",
        "ensure \"$persist_dir\" | Out-Null",
        "New-Item \"$env:UserProfile\\.config\\v2raya\" -ItemType Junction -Target \"$persist_dir\" | Out-Null"
    ],
    "installer": {
        "script": [
            "${env:GOPROXY} = 'https://proxy.golang.com.cn,direct'",
            "Write-Host \"If you cannot build Web Control Panel, try to set yarn's mirror to taobao by these command:\"",
            "Write-Host \"yarn config set registry https://npmmirror.com/\" ",
            "Push-Location $dir",
            "# zip web files",
            "Function Gzip-File([ValidateScript({Test-Path $_})][string]$File){",
            "    $srcFile = Get-Item -Path $File",
            "    $newFileName = \"$($srcFile.FullName).gz\"",
            "    try",
            "    {",
            "        $srcFileStream = New-Object System.IO.FileStream($srcFile.FullName,([IO.FileMode]::Open),([IO.FileAccess]::Read),([IO.FileShare]::Read))",
            "        $dstFileStream = New-Object System.IO.FileStream($newFileName,([IO.FileMode]::Create),([IO.FileAccess]::Write),([IO.FileShare]::None))",
            "        $gzip = New-Object System.IO.Compression.GZipStream($dstFileStream,[System.IO.Compression.CompressionMode]::Compress)",
            "        $srcFileStream.CopyTo($gzip)",
            "    } ",
            "    catch",
            "    {",
            "        Write-Host \"$_.Exception.Message\" -ForegroundColor Red",
            "    }",
            "    finally",
            "    {",
            "        $gzip.Dispose()",
            "        $srcFileStream.Dispose()",
            "        $dstFileStream.Dispose()",
            "    }",
            "}",
            "# Disable CGO",
            "${env:CGO_ENABLED} = \"0\"",
            "${env:NODE_OPTIONS} = \"--openssl-legacy-provider\"",
            "# Set AMD64 CPU Version",
            "# See https://go.dev/doc/go1.18 for more informations",
            "${env:GOAMD64} = \"v2\"",
            "## Set yarn's output path",
            "${env:OUTPUT_DIR} = \"$dir/service/server/router/web\"",
            "# Build v2rayA",
            "Set-Location -Path \"$dir/gui\"",
            "yarn; yarn build",
            "Get-ChildItem \"$dir/service/server/router/web\" -recurse |Where-Object{$_.PSIsContainer -eq $False}|ForEach-Object -Process{",
            "    if($_.Extension -ne \".png\" -and $_.Extension -ne \".gz\" -and $_.Name -ne \"index.html\"){",
            "        Gzip-File($_.FullName)",
            "        Remove-Item -Path $_.FullName",
            "    }",
            "}",
            "$versions = 'unstable-' + $version",
            "Set-Location -Path \"$dir/service\"",
            "go build -ldflags \"-X github.com/v2rayA/v2rayA/conf.Version=$versions -s -w\" -o \"$dir/v2rayaWin-git.exe\"",
            "Pop-Location",
            "Set-Content \"$dir\\start-v2raya-git.ps1\" -Value 'Start-Process -FilePath \"$(scoop prefix v2raya-git)\\v2rayaWin-git.exe\" -ArgumentList @(\"--lite\", \"--log-file v2raya-git.log\") -WorkingDirectory \"$env:TEMP\" -WindowStyle Hidden' -Encoding Ascii",
            "Set-Content \"$dir\\stop-v2raya-git.ps1\" -Value 'taskkill.exe /IM v2rayawin-git.exe' -Encoding Ascii"
        ]
    },
    "pre_uninstall": [
        "stop-v2raya-git",
        "Remove-Item \"$env:UserProfile\\.config\\v2raya\" -ErrorAction 'SilentlyContinue' -Force -Recurse"
    ],
    "bin": [
        [
            "v2rayaWin-git.exe",
            "v2raya-git",
            "--lite"
        ],
        [
            "v2rayaWin-git.exe",
            "v2rayaWin-git"
        ],
        "start-v2raya-git.ps1",
        "stop-v2raya-git.ps1"
    ],
    "env_set": {
        "V2RAYA_V2RAY_BIN": "$(scoop prefix v2ray)\\v2ray.exe"
    },
    "checkver": {
        "url": "https://github.com/v2rayA/v2rayA/commits/feat_v5.atom",
        "regex": "(?s)>(\\d+)-(\\d+)-(\\d+)T.*?/(?<sha>(?<short>[0-9a-f]{7})[0-9a-f]{33})",
        "replace": "${1}${2}${3}.${short}"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://github.com/v2rayA/v2rayA/archive/$matchSha.zip",
                "extract_dir": "v2rayA-$matchSha"
            }
        }
    }
}
